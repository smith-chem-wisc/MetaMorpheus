name: Install and Run

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  install:
    name: Create Install Artifact
    runs-on: windows-latest

    env:
      DOTNET_VERSION: 8.0.204

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore dependencies
        run: dotnet restore ./MetaMorpheus/MetaMorpheus.sln

      - name: Build solution
        run: dotnet msbuild -v:minimal -p:Configuration=Release -p:UseSharedCompilation=false ./MetaMorpheus/

      - name: Build installer
        run: |
          msbuild ./MetaMorpheus/MetaMorpheusSetup/MetaMorpheusSetup.wixproj /p:Configuration=Release /verbosity=minimal /p:UseSharedCompilation=false
          msbuild ./MetaMorpheus/Bootstrapper/Bootstrapper.wixproj /p:Configuration=Release /p:UseSharedCompilation=false

      - name: Verify installer exists
        run: |
          if (!(Test-Path "./MetaMorpheus/MetaMorpheusSetup/bin/Release/MetaMorpheusInstaller.msi")) {
            Write-Host "❌ Installer build failed: MetaMorpheusInstaller.msi not found." -ForegroundColor Red
            exit 1
          }

      - name: Decrypt security certificate
        run: |
          nuget install secure-file -ExcludeVersion
          secure-file/tools/secure-file -decrypt MetaMorpheus/smith_MM_certificate.pfx.enc -secret ${{ secrets.KEY_SECRET }}

      - name: Sign installer
        run: |
          $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2("MetaMorpheus/smith_MM_certificate.pfx", "${{ secrets.KEY_CERT }}", "DefaultKeySet")
          Set-AuthenticodeSignature -FilePath "./MetaMorpheus/MetaMorpheusSetup/bin/Release/MetaMorpheusInstaller.msi" -Certificate $cert

      - name: Zip command-line version
        run: |
          7z a MetaMorpheus_CommandLine.zip .\MetaMorpheus\CMD\bin\Release\net8.0\* "-x!*.xml"

      # check that installer is greater than 1 kb to avoid pushing an empty artifact
      - name: Validate command-line zip artifact
        run: |
          if ((Get-Item MetaMorpheus_CommandLine.zip).length -lt 1kb) {
            Write-Host "❌ The build failed because the command-line .zip did not build properly; it is empty." -ForegroundColor Red
            exit 1
          }

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: MetaMorpheusInstaller
          path: ./MetaMorpheus/MetaMorpheusSetup/bin/Release/MetaMorpheusInstaller.msi

      - name: Upload command-line zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: MetaMorpheusCommandLine
          path: MetaMorpheus_CommandLine.zip


  test_installer:
    name: Search with Installed CMD
    runs-on: windows-latest
    needs: install

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.204

      - name: Download installer artifact
        uses: actions/download-artifact@v4
        with:
          name: MetaMorpheusInstaller

      - name: Install MetaMorpheus MSI
        run: |
          Start-Process -FilePath msiexec.exe -ArgumentList "/i `"$(Get-Location)\MetaMorpheusInstaller.msi`" /qn /l*v install.log" -Wait

      - name: Run search with installed CMD.exe
        run: |
          $dataDir = "$(Get-Location)\CMD\bin\Release\net8.0\Data"
          & "C:\Program Files\MetaMorpheus\CMD.exe" -s "$dataDir\SmallCalibratible_Yeast.mzML" -d "$dataDir\SmallYeast.fasta" -t "$dataDir\SearchTask.toml" -o "$dataDir\exe_output" -v minimal

      - name: Run search with installed CMD.dll
        run: |
          $dataDir = "$(Get-Location)\CMD\bin\Release\net8.0\Data"
          dotnet "C:\Program Files\MetaMorpheus\CMD.dll" -s "$dataDir\SmallCalibratible_Yeast.mzML" -d "$dataDir\SmallYeast.fasta" -t "$dataDir\SearchTask.toml" -o "$dataDir\dll_output" -v minimal

  test_build:
    name: Search with Built CMD.dll
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.204

      - name: Restore dependencies
        run: dotnet restore ./MetaMorpheus/MetaMorpheus.sln

      - name: Build solution
        run: dotnet msbuild -v:minimal -p:Configuration=Release -p:UseSharedCompilation=false ./MetaMorpheus/

      - name: Generate Default TOMLs
        run: |
          dotnet "$(Get-Location)\MetaMorpheus\CMD\bin\Release\net8.0\CMD.dll" -g -o "$(Get-Location)\CMD\bin\Release\net8.0\Data"

      - name: Run search with built CMD.dll
        run: |
          $dataDir = "$(Get-Location)\CMD\bin\Release\net8.0\Data"
          dotnet "$(Get-Location)\MetaMorpheus\CMD\bin\Release\net8.0\CMD.dll" -s "$dataDir\SmallCalibratible_Yeast.mzML" -d "$dataDir\SmallYeast.fasta" -t "$dataDir\SearchTask.toml" -o "$dataDir\built_dll_output" -v minimal

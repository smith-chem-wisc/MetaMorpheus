<Window x:Class="MetaMorpheusGUI.SearchTaskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MetaMorpheusGUI"
        mc:Ignorable="d"
        Title="Search Task" Width="750" Height="880" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <local:BooleanInverter x:Key="InvertedBooleanConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <DockPanel>
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                    <Label Content="Task Name" />
                    <TextBox x:Name="OutputFileNameTextBox" Width="150">
                        <TextBox.Style>
                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <Style.Resources>
                                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                        <VisualBrush.Visual>
                                            <Label Content="SearchTask" Foreground="Gray" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Background" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
                <GroupBox Header="File Loading Parameters" DockPanel.Dock="Top">
                    <Expander x:Name="FileLoadExpander" Collapsed="ApmdExpander_Collapsed">
                        <StackPanel>
                            <GroupBox Header="Deisotoping">
                                <StackPanel>
                                    <CheckBox x:Name="useProvidedPrecursor" Content="Use Provided Precursor" IsChecked="True" />
                                    <CheckBox x:Name="deconvolutePrecursors" Content="Deconvolute Precursors" IsChecked="True" />
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Label Content="Deconvolution Intensity Ratio " />
                                        <TextBox x:Name="DeconvolutionIntensityRatioTextBox" Width="45" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Label Content="Deconvolution Max Assumed Charge State" />
                                        <TextBox x:Name="DeconvolutionMaxAssumedChargeStateTextBox" PreviewTextInput="PreviewIfInt" Width="45" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Label Content="Deconvolution Mass Tolerance in PPM" />
                                        <TextBox x:Name="DeconvolutionMassToleranceInPpmTextBox" Width="45" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Peak Trimming">
                                <StackPanel>
                                    <CheckBox x:Name="trimMs1" Content="Trim MS1 Peaks" IsChecked="True" />
                                    <CheckBox x:Name="trimMsMs" Content="Trim MS/MS Peaks" IsChecked="True" />
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Label Content="Top N peaks" />
                                        <TextBox x:Name="TopNPeaksCheckBox" Width="45" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Label Content="Minimum ratio" />
                                        <TextBox x:Name="MinRatioCheckBox" Width="45" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <CheckBox x:Name="disposeOfFilesWhenDone" Content="Dispose of files when done" IsChecked="True" />
                        </StackPanel>
                    </Expander>
                </GroupBox>
                <GroupBox Header="Assumed Spectral Data Parameters" DockPanel.Dock="Top">
                    <Expander x:Name="AssumedSpectraDataParametersExpander" Collapsed="ApmdExpander_Collapsed">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <Label Content="Precursor Mass Tolerance" />
                                <TextBox x:Name="precursorMassToleranceTextBox" HorizontalAlignment="Left" TextWrapping="Wrap" Width="45" />
                                <ComboBox x:Name="precursorMassToleranceComboBox" HorizontalAlignment="Left" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <Label Content="Product Mass Tolerance" />
                                <TextBox x:Name="productMassToleranceTextBox" HorizontalAlignment="Left" TextWrapping="Wrap" Width="45" />
                                <ComboBox x:Name="productMassToleranceComboBox" HorizontalAlignment="Left" />
                            </StackPanel>
                        </StackPanel>
                    </Expander>
                </GroupBox>
                <GroupBox Header="Search Parameters" DockPanel.Dock="Top">
                    <Expander x:Name="SearchModeExpander" Collapsed="ApmdExpander_Collapsed">
                        <Expander.Style>
                            <Style TargetType="Expander">
                                <Setter Property="Header" Value="{Binding SearchModeExpanderTitle}" />
                                <Style.Triggers>
                                    <Trigger Property="IsExpanded" Value="True">
                                        <Setter Property="Header" Value="Hide" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Expander.Style>
                        <StackPanel>
                            <GroupBox Header="Search Mode">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0">
                                        <RadioButton x:Name="classicSearchRadioButton" Content="Classic Search" GroupName="SearchType" />
                                        <CheckBox x:Name="conserveMemoryCheckBox" Content="Conserve memory (might be slow)"  IsEnabled="{Binding IsChecked, ElementName=classicSearchRadioButton}" />
                                    </StackPanel>
                                    <StackPanel Grid.Column="1">
                                        <RadioButton x:Name="modernSearchRadioButton" Content="Modern Search" GroupName="SearchType" />
                                        <StackPanel Orientation="Horizontal" Margin="1">
                                            <Label x:Name="label2" Content="Number of Database Partitions" />
                                            <TextBox x:Name="numberOfDatabaseSearchesTextBox" PreviewTextInput="PreviewIfInt" Width="45" />
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Grid.Column="2">
                                        <RadioButton x:Name="nonSpecificSearchRadioButton" Content="NonSpecific Search" GroupName="SearchType" />
                                    </StackPanel>
                                </Grid>
                            </GroupBox>
                            <GroupBox Header="In-Silico Digestion Parameters">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel>
                                        <CheckBox x:Name="checkBoxTarget" Content="Generate target proteins" Margin="1" DockPanel.Dock="Top" />
                                        <CheckBox x:Name="checkBoxDecoy" Content="Generate decoy proteins" Margin="1" DockPanel.Dock="Top" />
                                        <RadioButton x:Name="radioButtonReverseDecoy" Content="Generate reversed decoys" GroupName="DecoyType" Margin="1" DockPanel.Dock="Top" IsEnabled="{Binding IsChecked, ElementName=checkBoxDecoy}" />
                                        <RadioButton x:Name="radioButtonSlideDecoy" Content="Generate slided decoys" GroupName="DecoyType" Margin="1" DockPanel.Dock="Top" IsEnabled="{Binding IsChecked, ElementName=checkBoxDecoy}" />
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <Label x:Name="label1" Content="Max Missed Cleavages" />
                                            <TextBox x:Name="missedCleavagesTextBox" PreviewTextInput="PreviewIfInt" Width="45" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <Label x:Name="label_Copy" Content="Protease" />
                                            <ComboBox x:Name="proteaseComboBox" />
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Grid.Column="1">
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <Label x:Name="label1_Copy" Content="Initiator Methionine" />
                                            <ComboBox x:Name="initiatorMethionineBehaviorComboBox" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <Label x:Name="label55_Copy" Content="Max Modification Isoforms" />
                                            <TextBox x:Name="maxModificationIsoformsTextBox" PreviewTextInput="PreviewIfInt" Width="45" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <Label x:Name="lblMinPeptideLength" Content="Min Peptide Len" />
                                            <TextBox x:Name="txtMinPeptideLength" PreviewTextInput="PreviewIfInt" Width="45" />
                                            <Label x:Name="lblMaxPeptideLength" Content="Max Peptide Len" />
                                            <TextBox x:Name="txtMaxPeptideLength" PreviewTextInput="PreviewIfInt" Width="45" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <Label x:Name="lbMaxModNum" Content="Max Mod for Peptides" />
                                            <TextBox x:Name="txtMaxModNum" PreviewTextInput="PreviewIfInt" Width="45" />
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>
                            <GroupBox Header="Fragment Ion Search Parameters">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <CheckBox x:Name="addCompIonCheckBox" Content="Generate Complementary Ions" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <Label x:Name="maxFragmentSize" Content="Max Fragment Mass (Da)" />
                                            <TextBox x:Name="txtMaxFragmentSize" PreviewTextInput="PreviewIfInt" Width="45" IsEnabled="{Binding IsChecked, ElementName=classicSearchRadioButton, Converter={StaticResource InvertedBooleanConverter}}" />
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Grid.Column="1">
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <Label x:Name="label4" Content="Ions to search" />
                                            <CheckBox x:Name="bCheckBox" Content="b ions" />
                                            <CheckBox x:Name="yCheckBox" Content="y ions" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="87,5,5,5">
                                            <CheckBox x:Name="cCheckBox" Content="c ions" />
                                            <CheckBox x:Name="zdotCheckBox" Content="zdot ions" />
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>
                            <GroupBox Header="Mass Difference Acceptor Criterion">
                                <StackPanel>
                                    <RadioButton x:Name="mdacExact" Content="Exact" />
                                    <RadioButton x:Name="mdac1mm" Content="1 Missed Monoisotopic Peak" />
                                    <RadioButton x:Name="mdac2mm" Content="1 or 2 Missed Monoisotopic Peaks" />
                                    <RadioButton x:Name="mdac3mm" Content="1, 2, or 3 Missed Monoisotopic Peaks" />
                                    <RadioButton x:Name="mdac187" Content="-187 and Up" />
                                    <RadioButton x:Name="mdacOpen" Content="Accept all" />
                                    <RadioButton x:Name="mdacCustom" Content="Custom:" />
                                    <TextBox x:Name="customkMdacTextBox" ToolTipService.ShowDuration="999999" ToolTip="A custom mass difference acceptor may be specified in multiple ways:&#x0a;* To accept a custom (other than the interval corresponding to the precursor tolerance) interval around zero daltons, specify a custom name, followed by &quot;ppmAroundZero&quot; or &quot;daltonsAroundZero&quot;, followed by the numeric value corresponding to the interval width. Examples:&#x0a;  * CustomPpmInterval ppmAroundZero 5&#x0a;  * CustomDaltonInterval daltonsAroundZero 2.1 &#x0a;&#x0a;* To accept a variety of pre-specified mass differences, use a custom name, followed by &quot;dot&quot;, followed by a custom bin width, followed by comma separated acceptable mass differences. Examples:&#x0a;  * CustomMissedIsotopePeaks dot 5 ppm 0,1.0029,2.0052&#x0a;  * CustomOxidationAllowed dot 0.1 da 0,16&#x0a;&#x0a;* To accept mass differences in pre-specified dalton intervals, use a custom name, followed by &quot;interval&quot;, followed by comma separated mass intervals in brackets. Example:&#x0a;  * CustomPositiveIntervalAcceptror interval [0,200]" />
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Ambiguity Parameters">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0">
                                        <StackPanel Orientation="Horizontal" Margin="1">
                                            <CheckBox x:Name="allAmbiguity" Content="Report All Ambiguity (might be slow)" Margin="5" />
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Grid.Column="1">
                                        <StackPanel Orientation="Horizontal" Margin="1">
                                            <CheckBox x:Name="excelCompatible" Content="Make Results Excel Compatible (crops cells at 32000 chars)" Margin="5" />
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <Label x:Name="ff" Content="MaxDegreeOfParallelism" />
                                <TextBox x:Name="maxDegreesOfParallelism" PreviewTextInput="PreviewIfInt" Width="45" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="5">
                                <Label x:Name="ffdf" Content="Minimum MM score allowed:" />
                                <TextBox x:Name="minScoreAllowed" Width="45" />
                            </StackPanel>
                        </StackPanel>
                    </Expander>
                </GroupBox>
                <GroupBox Header="Modifications" DockPanel.Dock="Top">
                    <Expander x:Name="ModExpander" Collapsed="ApmdExpander_Collapsed">
                        <Expander.Style>
                            <Style TargetType="Expander">
                                <Setter Property="Header" Value="{Binding ModExpanderTitle}" />
                                <Style.Triggers>
                                    <Trigger Property="IsExpanded" Value="True">
                                        <Setter Property="Header" Value="Hide" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Expander.Style>
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel>
                                    <Label Content="Fixed" />
                                    <TreeView x:Name="fixedModsTreeView" ItemsSource="{Binding}" Height="400">
                                        <TreeView.Resources>
                                            <HierarchicalDataTemplate DataType="{x:Type local:ModTypeForTreeView}" ItemsSource="{Binding Children}">
                                                <StackPanel Orientation="Horizontal" Background="{Binding Background}">
                                                    <CheckBox IsChecked="{Binding Use}" />
                                                    <TextBlock Text="{Binding DisplayName}" />
                                                </StackPanel>
                                            </HierarchicalDataTemplate>
                                            <DataTemplate DataType="{x:Type local:ModForTreeView}">
                                                <StackPanel Orientation="Horizontal" Background="{Binding Background}" ToolTip="{Binding ToolTipStuff}">
                                                    <CheckBox IsChecked="{Binding Use}" />
                                                    <TextBlock Text="{Binding DisplayName}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </TreeView.Resources>
                                    </TreeView>
                                </StackPanel>
                                <StackPanel Grid.Column="1">
                                    <Label Content="Variable" />
                                    <TreeView x:Name="variableModsTreeView" ItemsSource="{Binding}" Height="400">
                                        <TreeView.Resources>
                                            <HierarchicalDataTemplate DataType="{x:Type local:ModTypeForTreeView}" ItemsSource="{Binding Children}">
                                                <StackPanel Orientation="Horizontal" Background="{Binding Background}">
                                                    <CheckBox IsChecked="{Binding Use}" />
                                                    <TextBlock Text="{Binding DisplayName}" />
                                                </StackPanel>
                                            </HierarchicalDataTemplate>
                                            <DataTemplate DataType="{x:Type local:ModForTreeView}">
                                                <StackPanel Orientation="Horizontal" Background="{Binding Background}" ToolTip="{Binding ToolTipStuff}">
                                                    <CheckBox IsChecked="{Binding Use}" />
                                                    <TextBlock Text="{Binding DisplayName}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </TreeView.Resources>
                                    </TreeView>
                                </StackPanel>
                                <StackPanel Grid.Column="2">
                                    <Label Content="Database Localized" />
                                    <CheckBox x:Name="localizeAllCheckBox" Content="Localize All Modifications" IsChecked="True" />
                                    <TreeView x:Name="localizeModsTreeView" ItemsSource="{Binding}" Height="400">
                                        <TreeView.Style>
                                            <Style TargetType="{x:Type TreeView}">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=localizeAllCheckBox, Path=IsChecked}" Value="True">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TreeView.Style>
                                        <TreeView.Resources>
                                            <HierarchicalDataTemplate DataType="{x:Type local:ModTypeForTreeView}" ItemsSource="{Binding Children}">
                                                <StackPanel Orientation="Horizontal" Background="{Binding Background}">
                                                    <CheckBox IsChecked="{Binding Use}" />
                                                    <TextBlock Text="{Binding DisplayName}" />
                                                </StackPanel>
                                            </HierarchicalDataTemplate>
                                            <DataTemplate DataType="{x:Type local:ModForTreeView}">
                                                <StackPanel Orientation="Horizontal" Background="{Binding Background}"  ToolTip="{Binding ToolTipStuff}">
                                                    <CheckBox IsChecked="{Binding Use}" />
                                                    <TextBlock Text="{Binding DisplayName}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </TreeView.Resources>
                                    </TreeView>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Expander>
                </GroupBox>
                <GroupBox Header="Post-Search Analysis" DockPanel.Dock="Top" ScrollViewer.CanContentScroll="True">
                    <Expander x:Name="AnalysisExpander" Collapsed="ApmdExpander_Collapsed">
                        <Expander.Style>
                            <Style TargetType="Expander">
                                <Setter Property="Header" Value="{Binding AnalysisExpanderTitle}" />
                                <Style.Triggers>
                                    <Trigger Property="IsExpanded" Value="True">
                                        <Setter Property="Header" Value="Hide" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Expander.Style>
                        <StackPanel>
                            <GroupBox Header="Protein Parsimony">
                                <StackPanel>
                                    <CheckBox x:Name="checkBoxParsimony" Content="Apply protein parsimony and construct protein groups">
                                        <ToolTipService.ToolTip>
                                            <ToolTip Content="Constructs protein groups according to the rule of maximum parsimony (Occam's razor)" />
                                        </ToolTipService.ToolTip>
                                    </CheckBox>
                                    <CheckBox x:Name="checkBoxNoOneHitWonders" Content="Require at least two peptides to identify protein" IsEnabled="{Binding IsChecked, ElementName=checkBoxParsimony}">
                                        <ToolTipService.ToolTip>
                                            <ToolTip Content="At least 2 peptides below 1% FDR are required to construct a target/contaminant protein group" />
                                        </ToolTipService.ToolTip>
                                    </CheckBox>
                                    <CheckBox x:Name="modPepsAreUnique" Content="Treat modified peptides as different peptides" IsEnabled="{Binding IsChecked, ElementName=checkBoxParsimony}">
                                        <ToolTipService.ToolTip>
                                            <ToolTip Content="Modified forms of a peptide base sequence are treated as different for the purposes of parsimony, protein group displays, peptide counts, etc" />
                                        </ToolTipService.ToolTip>
                                    </CheckBox>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Quantification">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="5*" />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Margin="5" VerticalAlignment="Top"  Grid.Column="0">
                                        <CheckBox x:Name="checkBoxQuantification" Content="Quantify peptides/proteins">
                                            <ToolTipService.ToolTip>
                                                <ToolTip Content="Label-free quantification is performed unless the TMT modification is detected" />
                                            </ToolTipService.ToolTip>
                                        </CheckBox>
                                    </StackPanel>
                                    <StackPanel Margin="0" VerticalAlignment="Top"  Grid.Column="1">
                                        <Label x:Name="quantPpmLabel" Content="Tolerance (ppm)" IsEnabled="{Binding IsChecked, ElementName=checkBoxQuantification}" />
                                        <TextBox x:Name="quantPpmTolerance" Width="30" IsEnabled="{Binding IsChecked, ElementName=checkBoxQuantification}">
                                            <ToolTipService.ToolTip>
                                                <ToolTip Content="PPM tolerance for MS1 (LFQ) or diagnostic ions (TMT)" />
                                            </ToolTipService.ToolTip>
                                        </TextBox>
                                        <CheckBox x:Name="checkBoxMatchBetweenRuns" Content="Match between runs" IsEnabled="{Binding IsChecked, ElementName=checkBoxQuantification}" />
                                        <ToolTipService.ToolTip>
                                            <ToolTip Content="(LFQ) Use MS2 identifications from one run to quantify those same peptides in other runs where they were not identified" />
                                        </ToolTipService.ToolTip>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>
                            <GroupBox Header="Mass Shift Histogram Analysis">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox x:Name="checkBoxHistogramAnalysis" Content="Do Histogram Analysis" />
                                    <Label Content="Histogram bin width (Da):" />
                                    <TextBox x:Name="histogramBinWidthTextBox" Width="45" IsEnabled="{Binding IsChecked, ElementName=checkBoxHistogramAnalysis}" />
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Pruned Database Writing">
                                <StackPanel>
                                    <CheckBox x:Name="writePrunedDBCheckBox" Content="Write Two Pruned Databases (Mod and Mod+Protein pruned)" />
                                    <DataGrid x:Name="ModSelectionGrid" AutoGenerateColumns = "false" ItemsSource="{Binding UpdateSourceTrigger=LostFocus, Mode=OneWay}" Visibility="{Binding prunedVisible, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding IsChecked, ElementName=writePrunedDBCheckBox}" IsReadOnly="False" AlternatingRowBackground="LightGray" AlternationCount="2">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Mod Type"  Width="1*" Binding="{Binding ModName}" />
                                            <DataGridTemplateColumn  Header=" Do not Write"  Width ="1*" IsReadOnly="False">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <RadioButton HorizontalAlignment="Center" GroupName="{Binding ModName}" IsChecked="{Binding Item2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn  Header="Write if in DB and Observed"  Width ="1*" IsReadOnly="False">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <RadioButton HorizontalAlignment="Center" GroupName="{Binding ModName}" IsChecked="{Binding Item3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn  Header="Write if in DB"  Width ="1*" IsReadOnly="False">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <RadioButton HorizontalAlignment="Center" GroupName="{Binding ModName}" IsChecked="{Binding Item4, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn  Header="Write if Observed"  Width ="1*" IsReadOnly="False">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <RadioButton HorizontalAlignment="Center"  GroupName="{Binding ModName}" IsChecked="{Binding Item5, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Expander>
                </GroupBox>
            </DockPanel>
        </ScrollViewer>
        <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="1" Margin="5">
            <Button x:Name="cancelButton" Content="Cancel" Click="CancelButton_Click" />
            <Button x:Name="saveButton" Content="Save Search Task" Click="SaveButton_Click" FontSize="24" />
        </StackPanel>
    </Grid>
</Window>